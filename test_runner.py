from encoder_decoder import Encoder, Decoder

class TestEncoderDecoder:
    def test_encoder(self):
        test_vectors = [
            ({"null": None, "octets": bytes([1, 2, 3]), "integer": 12345, "string": "hello"}, 
             [0x06, 0x04, 0x04, 0x6E, 0x75, 0x6C, 0x6C, 0x00, 0x06, 0x6F, 0x63, 0x74, 0x65, 0x74, 0x73, 0x01, 0x03, 0x01, 0x02, 0x03, 0x07, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x39, 0x30, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x05, 0x05, 0x68, 0x65, 0x6C, 0x6C, 0x6F]),
            ({"outer": {"inner": [1, 2, 3], "value": 42}}, 
             [0x06, 0x01, 0x05, 0x6F, 0x75, 0x74, 0x65, 0x72, 0x06, 0x02, 0x05, 0x69, 0x6E, 0x6E, 0x65, 0x72, 0x03, 0x01, 0x01, 0x02, 0x03, 0x05, 0x76, 0x61, 0x6C, 0x75, 0x65, 0x02, 0x2A]),
            (18446744073709551615, 
             [0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF])
        ]

        for input_data, expected_output in test_vectors:
            encoded_data = Encoder.encode(input_data)
            print(f"Input Data: {input_data}")
            print(f"Encoded Data: {encoded_data}")
            print(f"Expected Output: {expected_output}")
            assert encoded_data == expected_output, f'Encoding failed for {input_data}'

    def test_decoder(self):
        test_vectors = [
            ([0x06, 0x04, 0x04, 0x6E, 0x75, 0x6C, 0x6C, 0x00, 0x06, 0x6F, 0x63, 0x74, 0x65, 0x74, 0x73, 0x01, 0x03, 0x01, 0x02, 0x03, 0x07, 0x69, 0x6E, 0x74, 0x65, 0x67, 0x65, 0x72, 0x39, 0x30, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x05, 0x05, 0x68, 0x65, 0x6C, 0x6C, 0x6F], 
             {"null": None, "octets": bytes([1, 2, 3]), "integer": 12345, "string": "hello"}),
            ([0x06, 0x01, 0x05, 0x6F, 0x75, 0x74, 0x65, 0x72, 0x06, 0x02, 0x05, 0x69, 0x6E, 0x6E, 0x65, 0x72, 0x03, 0x01, 0x01, 0x02, 0x03, 0x05, 0x76, 0x61, 0x6C, 0x75, 0x65, 0x02, 0x2A], 
             {"outer": {"inner": [1, 2, 3], "value": 42}}),
            ([0x02, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF], 
             18446744073709551615)
        ]

        for encoded_data, expected_output in test_vectors:
            decoded_data, _ = Decoder.decode(encoded_data)
            print(f"Encoded Data: {encoded_data}")
            print(f"Decoded Data: {decoded_data}")
            assert decoded_data == expected_output, f'Decoding failed for {encoded_data}'

if __name__ == '__main__':
    test = TestEncoderDecoder()
    test.test_encoder()
    test.test_decoder()